variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375/

services:
  - docker:dind

stages:
  - build

.build-arch-template: &build-template
  image: maksrawski/docker-buildx-qemu-ci
  before_script:
    - bash /setup.sh

    # When building for arm64 `cargo build` gets stuck on `Updating crates.io index`.
    # https://github.com/rust-lang/cargo/issues/9167#issue-807444842
    - mkdir -p .cargo
    - echo -e "[net]\ngit-fetch-with-cli = true" > .cargo/config

    # copy CI's cache of cargo dependencies and apply below fix
    # after the first `apt-get update` when building the Dockerfile
    # https://github.com/microsoft/WSL/issues/4760#issuecomment-642715044
    - sed -i -E 's?^.*apt-get update.*$?\0\nRUN if [ -e ./cargo ]; then rm -rf /usr/local/cargo/; mv ./cargo /usr/local/cargo; fi\n
      RUN mv /var/lib/dpkg/info/libc-bin.* /tmp/ \&\&
      dpkg --remove --force-remove-reinstreq --force-remove-essential --force-depends libc-bin \&\&
      dpkg --purge libc-bin \&\&
      apt-get install -y libc-bin \&\&
      mv /tmp/libc-bin.* /var/lib/dpkg/info/?' Dockerfile

  script:
    - docker buildx build --platform linux/$CI_JOB_NAME
      -t genius -o type=docker,dest=- . > genius-img.tar
    - docker load < genius-img.tar
    - docker run --platform linux/$CI_JOB_NAME --name genius genius /bin/sh

    - docker cp genius:/genius/target .
    - docker cp genius:/usr/local/cargo .
    - ls
    - docker rm -f genius

  artifacts:
    paths:
      - genius-img.tar
      - target/release/genius

  cache:
    untracked: true
    key: $CI_JOB_NAME
    paths:
      - cargo
      - target

amd64:
  stage: build
  <<: *build-template

arm64:
  stage: build
  <<: *build-template
